name: Publish private-id Docker Image

on:
  push:
    branches: [ main ]
env:
  DISTRO: ubuntu
  REGISTRY: ghcr.io
  LOCAL_IMAGE_NAME: private-id
  LOCAL_IMAGE_TAG: latest
  REGISTRY_IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  push:
    runs-on: ubuntu-latest
    name: Build and Publish PID Image
    permissions:
      contents: write
      packages: write

    steps:
      - name: Lowercase REGISTRY_IMAGE_NAME
        id: lower_case_registry_image_name
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ env.REGISTRY_IMAGE_NAME }}

      - name: Load registry image name into env
        run: echo "REGISTRY_IMAGE_NAME_LOWERCASE=${{ steps.lower_case_registry_image_name.outputs.lowercase }}" >> ${GITHUB_ENV}

      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-pid-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-pid

      - name: Build Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          tags: |
            ${{ env.LOCAL_IMAGE_NAME }}:${{ env.LOCAL_IMAGE_TAG }}
          build-args: |
            tag=latest
            os_release=20.04
            fbpcf_image=ghcr.io/facebookresearch/fbpcf/ubuntu:${{ inputs.fbpcf_version }}
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary or else our cache will grow forever
      # until it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Create version string
        id: create_version
        uses: paulhatch/semantic-version@v4
        with:
          tag_prefix: "v"
          major_pattern: "((MAJOR))"
          minor_pattern: "((MINOR))"
          format: "${major}.${minor}.${patch}-pre${increment}"

      - name: Add tag to commit
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.create_version.outputs.version_tag }}
          tag_prefix: ""

      # Tests can be added here

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set output
        id: vars
        run: echo ::set-output name=ref::${GITHUB_REF##*/}

      - name: Tag docker image
        run: |
          docker tag ${{ env.LOCAL_IMAGE_NAME }}:${{ env.LOCAL_IMAGE_TAG }} ${{ env.REGISTRY_IMAGE_NAME_LOWERCASE }}:${{ github.sha }}
          docker tag ${{ env.LOCAL_IMAGE_NAME }}:${{ env.LOCAL_IMAGE_TAG }} ${{ env.REGISTRY_IMAGE_NAME_LOWERCASE }}:${{ steps.vars.outputs.ref }}
          docker tag ${{ env.LOCAL_IMAGE_NAME }}:${{ env.LOCAL_IMAGE_TAG }} ${{ env.REGISTRY_IMAGE_NAME_LOWERCASE }}:latest
          docker tag ${{ env.LOCAL_IMAGE_NAME }}:${{ env.LOCAL_IMAGE_TAG }} ${{ env.REGISTRY_IMAGE_NAME_LOWERCASE }}:${{ steps.create_version.outputs.version_tag }}

      # Can't create a docker tag of just `0` or `0.0` or `0.0.0`
      - name: Tag docker major version
        if: steps.create_version.outputs.major != 0
        run: docker tag ${{ env.LOCAL_IMAGE_NAME }}:${{ env.LOCAL_IMAGE_TAG }} ${{ env.REGISTRY_IMAGE_NAME_LOWERCASE }}:${{ steps.create_version.outputs.major }}

      - name: Tag docker major.minor version
        if: steps.create_version.outputs.major != 0 || steps.create_version.outputs.minor != 0
        run: docker tag ${{ env.LOCAL_IMAGE_NAME }}:${{ env.LOCAL_IMAGE_TAG }} ${{ env.REGISTRY_IMAGE_NAME_LOWERCASE }}:${{ steps.create_version.outputs.major }}.${{ steps.create_version.outputs.minor }}

      - name: Tag docker major.minor.patch version
        if: steps.create_version.outputs.major != 0 || steps.create_version.outputs.minor != 0 || steps.create_version.outputs.patch != 0
        run: docker tag ${{ env.LOCAL_IMAGE_NAME }}:${{ env.LOCAL_IMAGE_TAG }} ${{ env.REGISTRY_IMAGE_NAME_LOWERCASE }}:${{ steps.create_version.outputs.major }}.${{ steps.create_version.outputs.minor }}.${{ steps.create_version.outputs.patch }}

      - name: Push image to registry
        run: docker push --all-tags ${{ env.REGISTRY_IMAGE_NAME_LOWERCASE }}

      - name: Create release
        uses: "actions/create-release@v1"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: ${{ steps.create_version.outputs.version_tag }}
          tag_name: ${{ steps.create_version.outputs.version_tag }}
